Программа «Файловый менеджер»

В начале вам будет доступно пять команд: вы можете завершить работу с программой, 
просмотреть подробный список всех команд, выбрать группу команд: основные, работа с файлами, 
дополнительные, – и программа перенаправит вас к ним. Также вы можете посмотреть текущий путь.

Выбор команды осуществляется через ввод соответствующей цифры, но т.к. с консоли 
считывается строка, цифру с незначащими нулями программа примет как неверный ввод.

В процессе работы с программой может всплывать надпись с просьбой нажать любую клавишу
для очищения экрана. 
Уточнение: сочетания клавиш, принудительно завершающие программу, нажимать не надо.

Помимо вывода в консоль результат некоторых операций (вывод файлов директории, 
вывод иерархии файлов и поддиректорий директории, результат конкатенации файлов) 
записывается в файл "output.txt", который находится в папке с проектом.


Некоторые ограничения (значения констант можно посмотреть в коде):

• Вывод всех файлов и поддиректорий директории работает через рекурсию. 
Если число шагов рекурсии превысит {RecursionLimit}, то она завершится принудительно,
и программа будет выводить неполный список. 
В таком случае вы можете выбрать либо другую папку, либо меньшую глубину обхода.

• В некоторых частях кода не предусмотрен повторный ввод значения в случае неправильного вывода
(например, выбор номера диска или кодировки). Вместо этого программа использует значения по умолчанию.

• При перемещении и копировании файла будет учитываться его размер. 
Чтобы не пришлось долго ждать завершения операции, 
учитываются только файлы размера не более {FileSizeLimit} байт.

• Программа не будет выводить более {LinesLimit} строк файла или результата конкатенации файлов.

• Вывод определённых файлов будет осуществляться по маскам, а не регулярным выражениям.
В масках всего два служебных символа:
"?" – ноль символов или ровно один произвольный символ.
"*" – любая последовательность символов длины от 0 и более.
Для примера рассмотрим маску "*.txt?". По ней выводятся файлы, 
в именах которых есть ".txt", до точки любое кол-во символов, после t – 0 или 1 символ.


Важное уточнение: программа была написана на Windows, так что в фидбэке прошу указать места, 
в которых она флексит на других OC (если звёзды так сложились, и у вас не винда)...

Если вместо интерфейса выводится абракадабра, попробуйте закомментировать первые две строки Main-а:
Console.InputEncoding = Encoding.Unicode;
Console.OutputEncoding = Encoding.Unicode;
Однако тогда могут возникнуть проблемы с не латинскими символами в пути.

Изначальная кодировка консоли – Unicode (utf-16), её можно изменить с помощью одной из основных команд.
Однако при выборе utf-32 программа напишет об ошибке, т.к. класс Console её не поддерживает.
При выборе askii будет нечитабельный интерфейс. С utf-8 не поддерживается кириллица.
/актуально для Windows, насчёт других систем точно сказать не могу/ 